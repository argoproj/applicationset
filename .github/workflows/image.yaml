name: Build image on commit to master

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [ labeled, unlabeled, opened, synchronize, reopened ]

env:
  GOLANG_VERSION: '1.17.6'

jobs:
  publish:
    if: github.repository == 'argoproj/applicationset'
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/applicationset
    steps:
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Checkout code
        uses: actions/checkout@master
        with:
          path: src/applicationset

      - name: Login to Quay.io container registry
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.TOKEN }}
        if: ${{ github.event_name == 'push' }}

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Build and publish the latest image
        run: |
          IMAGE_PLATFORMS=linux/amd64
          if [[ "${{ github.event_name }}" == "push" || "${{ contains(github.event.pull_request.labels.*.name, 'test-arm-image') }}" == "true" ]]
          then
            IMAGE_PLATFORMS=linux/amd64,linux/arm64
          fi
          echo "Building image for platforms: $IMAGE_PLATFORMS"
          make multi-images DOCKER_PUSH="${{ github.event_name == 'push' }}" \
          CONTAINER_REGISTRY=quay.io IMAGE_NAMESPACE=argoproj IMAGE_TAG=latest IMAGE_PLATFORMS=${IMAGE_PLATFORMS}
        working-directory: ./src/applicationset
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
